[*******************************************************************************
 * Copyright (c) 2013 EMF-REST.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Camilo Alvarez (cadorca@gmail.com)  - initial API and implementation
 ******************************************************************************]
[%
 import "restMethods.egl"; 
 import "../../lib/StringUtils.eol"; 
 import "../../lib/EcoreUtils.eol"; 
%]

[% var pckName = clazz.package(); %]
package [%=pckName%].service;

import java.util.List;
import javax.inject.Inject;
import javax.ws.rs.*;
import javax.ws.rs.core.MediaType;
import org.eclipse.emf.ecore.util.EcoreUtil;
import javax.ws.rs.core.Response;
import webmapi.service.configuration.Wrapper;
import webmapi.util.ResourceSaver;
import [%=pckName%].*;
import [%=pckName%].impl.*;

public class [%=clazz.rscClassName()%]{

    private [%=clazz.qualifiedName()%] instance;
    private String id;
     @Inject
	private ResourceSaver resourceSaver;
    public [%=clazz.rscClassName()%]([%=clazz.qualifiedName()%] instance,String id){
    	this.instance = instance;
    	this.id = id;
    }

	@GET
	@Produces({MediaType.APPLICATION_JSON,MediaType.APPLICATION_XML})
	public [%=clazz.qualifiedName()%] get[%=clazz.name%](){
		return instance;
	}
		
	@PUT
	@Consumes({MediaType.APPLICATION_JSON,MediaType.APPLICATION_XML})
	public void update[%=clazz.name%]([%=clazz.name%]Impl object){
		resourceSaver.put(EcoreUtil.getIdentification(instance), object);
	}
	@DELETE
	public void delete[%=clazz.name%]() {
		resourceSaver.remove(EcoreUtil.getIdentification(instance));
	}

	[%
		for(ref in clazz.eAllReferences){ %]
		 [% ref.generateGenericResource(); %]
		
		 // REF [%=ref.name %]
		
		 [% ref.generateGET(); %]
		 [% ref.generatePOST(); %]
		 [% ref.generateDELETE(); %]
		
		 [* Look for all the concrete classses of the abstract reference *]
		[%}%]
	
}

[%
function EClass idParam() : String{
 return self.name+"Id";
}
%]