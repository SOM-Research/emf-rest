<%@ jet package="org.eclipse.emf.codegen.ecore.templates.model" imports="java.util.* org.eclipse.emf.codegen.ecore.genmodel.* org.eclipse.emf.codegen.util.CodeGenUtil org.eclipse.emf.ecore.*" class="RefFactory"%>
<%
/**
 * Copyright (c) 2002-2011 IBM Corporation and others.
 * All rights reserved.   This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   IBM - Initial API and implementation
 *  Enter  Ref
 */
%>
<%final GenPackage genPackage = (GenPackage) argument; 
final GenModel genModel=genPackage.getGenModel();
List<GenClassifier> listClasses = genPackage.getGenClassifiers();
		List<EClass> subClasses = new ArrayList<EClass>();
		%>
package <%= genPackage.getInterfacePackageName()+".proxy"%>;

<%genModel.markImportLocation(stringBuffer, genPackage);%>
<%genModel.addImport(genPackage.getImportedFactoryInterfaceName()); %>
<%genModel.addImport("javax.xml.bind.annotation.XmlRootElement"); %>

public class ProxyFactory{

<%for (GenClassifier eClassifier : listClasses) {%>
	public static <%=eClassifier.getName()%>Proxy create<%=eClassifier.getName()%>Proxy(String name){
  <%for (GenClassifier temp : listClasses) {%>
    <%if (((EClass)eClassifier.getEcoreClassifier()).isSuperTypeOf(((EClass)temp.getEcoreClassifier()))) {%>
		if (name.equals("<%=temp.getName()%>"))
			return new <%=temp.getName()%>Proxy();
    <%}%>
  <%}%>
		return null;
	}

  <%genModel.addImport(eClassifier.getImportedInstanceClassName()); %>
	public static <%=genModel.getImportedName(eClassifier.getName())%> create<%=eClassifier.getName()%>(<%=eClassifier.getName()%>Proxy type){
		<%=genPackage.getFactoryName()%> factory = <%=genPackage.getFactoryName()%>.eINSTANCE;
  <%for (GenClassifier temp : listClasses) {%>
    <%if(((EClass)eClassifier.getEcoreClassifier()).isSuperTypeOf(((EClass)temp.getEcoreClassifier()))) {%>
      <%if(!((EClass)eClassifier.getEcoreClassifier()).isAbstract()){%>
		if (type.getClass().getAnnotation(XmlRootElement.class).equals("<%=temp.getName().toLowerCase()%>"))
			return factory.create<%=temp.getName()%>();
      <%}%>
    <%}%>
  <%}%>
		return null;
	}

<%}%>
}
<%@ include file="Class/insert.javajetinc" fail="silent" %>
<% genModel.emitSortedImports(); %>